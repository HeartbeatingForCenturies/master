name: Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
    types: [opened, synchronize, reopened]
jobs:
  build-win:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      matrix:
        configuration:
          - Debug
          - Release
        arch:
          - Win32
          - x64
    steps:
      - name: Wait for previous workflows
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out files
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          # NOTE - If LFS ever starts getting used during builds, switch this to true!
          lfs: false

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Generate project files
        run: cmd /C call generate.bat

      - name: Set up problem matching
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Build ${{matrix.configuration}} ${{matrix.arch}} binaries
        run: msbuild /m /v:minimal /p:Configuration=${{matrix.configuration}} /p:Platform=${{matrix.arch}} build/xlabs-master.sln

      - name: Upload ${{matrix.configuration}} ${{matrix.arch}} binaries
        uses: actions/upload-artifact@v2
        with:
          name: Windows ${{matrix.configuration}} ${{matrix.arch}} binaries
          path: |
            build/bin/**/${{matrix.configuration}}/xlabs-master.exe
            build/bin/**/${{matrix.configuration}}/xlabs-master.pdb

  build-lin:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration:
          - debug
          - release
        arch:
          #- x86
          - x64
    steps:
      - name: Wait for previous workflows
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out files
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          # NOTE - If LFS ever starts getting used during builds, switch this to true!
          lfs: false

      - name: Install dependencies
        run: sudo apt-get -y install libcurl4-gnutls-dev

      - name: Generate project files
        run: ./generate.sh

      - name: Set up problem matching
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Build ${{matrix.configuration}} ${{matrix.arch}} binaries
        run: |
          pushd build
          make config=${{matrix.configuration}}_${{matrix.arch}} -j$(nproc)
